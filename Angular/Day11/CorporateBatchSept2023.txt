Last Lecture
1 output Decorator
   - to send a data from child to parent 
   
   parent.ts
   strDataReceived:string='';
   arrObj:any[]=[];
    
   parent.html
   <app-child2 (ChildStrEvent)="strDataReceived=$event"
			(childarrEvent)="arrObj=$event"
   >
   
   
   child2.ts
   
   @Output() ChildStrEvent=new EventEmitter();
   @Output() childarrEvent=new EventEmitter();
   strdat:string='';
   arrobj=[]
   
   onSend(){
	this.ChildStrEvent.emit(this.strdat);
	this.childarrEvent.emit(this.arrobj)
   }
   
   
2 ViewChild
	1 if u want access parent html element directly without event binding 
	
		parent.html
		<div #mydiv>
				....
				
		parent.ts 
		
		@ViewChild('mydiv') mydiv!:ElementRef;
		
		onAfterViewInit(){
			this.mydiv.nativeElement.className='mydivclass'
		}
	
	2 if u want access child property or child method in your parent component
		@ViewChild(Child3Component) childaccess!:Child3Component;
		
		onPropertyAccess(){
			this.childaccess.username=''
		}
		onAccessMethod(){
			this.childaccess.onAlert();
		}
		
			

Task 
1 Write a Program to send rating (as number) from parent component to child component. In child component check whether rating is less than 6 then apply background color

Today's Lecture
1 Inbuild Pipe
	- It transform ur data without chnaging its original value
	syntax => {{propertName | pipename}} 
			 <input [value]="name | pipename"
2 Custom Pipe 
	- PipeTransform => iterface 
		- transform
		
	
3 Services
	- It is simple class 
	- it is used for code resulability 
	- it is used for code maintability
	- it is used to connect ur backend server to ur frontend server 
	- it is provide isolation to ur component from http end point url 
	- it is used to written ur BL 
	
	
4 Http Services
	1 get => get the data from backend server 
	2 post => to send data from frontend server to backend send
	3 put  => to update particular record
	4 delete => to delete a particular record 
	
	Http Request / Http Response
	it has 2 parts 
	1 Header 
		- content Type 
			- image
			- json 
			- text
			- pdf
			- exceltsheet
		- Ip
		- date 
		- method
		- Auth token 
		- version 
	2 Body 
		data 
		   - json/text-html/xml 
		   
	Http Response
	1 Header 
		- content Type 
			- image
			- json 
			- text
			- pdf
			- exceltsheet
		- Ip
		- date 
		- method
		- Auth token 
		- version 
		- status 
			1 2xx => 200-299 => success,ok
			2 3xx => 300-399 => Redirection
			3 4xx => 400-499 => client 
			4 5xx => 500-599 => server side 
	2 Body 
		data 
		   - json/text-html/xml 
	
5 http://jsonplaceholder.typicode.com/posts
	- it is a fake service => bcz it not store /update/delete your recoed in database but it gives a response of ur request

	ng g s servicename 
	
	U have import HttpClientModule => app.module.ts =>import 
		
	
6 @Injectable
 



	
	